# Generated by Django 5.2 on 2025-04-10 11:36

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('ayarlar', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Kullanici',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('kullanici_tipi', models.CharField(choices=[('firma', 'Firma'), ('vatandas', 'Vatandaş'), ('belediye', 'Belediye')], default='vatandas', max_length=20, verbose_name='Kullanıcı Tipi')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
            },
        ),
        migrations.CreateModel(
            name='Firma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad', models.CharField(max_length=200, verbose_name='Firma Adı')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='Slug')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='firma/logo/', verbose_name='Logo')),
                ('aciklama', models.TextField(blank=True, null=True, verbose_name='Firma Açıklaması')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta')),
                ('telefon', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefon')),
                ('fax', models.CharField(blank=True, max_length=20, null=True, verbose_name='Fax')),
                ('web_sitesi', models.URLField(blank=True, null=True, verbose_name='Web Sitesi')),
                ('adres', models.TextField(blank=True, null=True, verbose_name='Adres')),
                ('posta_kodu', models.CharField(blank=True, max_length=10, null=True, verbose_name='Posta Kodu')),
                ('kurulus_yili', models.PositiveIntegerField(blank=True, null=True, verbose_name='Kuruluş Yılı')),
                ('calisan_sayisi', models.PositiveIntegerField(blank=True, null=True, verbose_name='Çalışan Sayısı')),
                ('vergi_dairesi', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vergi Dairesi')),
                ('vergi_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Vergi No')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='LinkedIn')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('aktif', models.BooleanField(default=True, verbose_name='Aktif')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('guncelleme_tarihi', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('il', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='firmalar', to='ayarlar.il', verbose_name='İl')),
                ('ilce', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='firmalar', to='ayarlar.ilce', verbose_name='İlçe')),
                ('kullanici', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='firmalar', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
                ('sektorler', models.ManyToManyField(blank=True, related_name='firmalar', to='ayarlar.sektor', verbose_name='Sektörler')),
            ],
            options={
                'verbose_name': 'Firma',
                'verbose_name_plural': 'Firmalar',
                'ordering': ['-olusturma_tarihi'],
            },
        ),
        migrations.CreateModel(
            name='Vatandas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Vatandaşı benzersiz şekilde tanımlayan UUID', unique=True)),
                ('dogum_tarihi', models.DateField(blank=True, help_text='Vatandaşın doğum tarihi', null=True, verbose_name='Doğum Tarihi')),
                ('cinsiyet', models.CharField(blank=True, choices=[('E', 'Erkek'), ('K', 'Kadın')], help_text='Vatandaşın cinsiyeti', max_length=1, null=True, verbose_name='Cinsiyet')),
                ('profil_fotografi', models.ImageField(blank=True, help_text='Vatandaşın profil fotoğrafı', null=True, upload_to='profil/fotograf/', verbose_name='Profil Fotoğrafı')),
                ('telefon', models.CharField(blank=True, help_text='İletişim için telefon numarası', max_length=20, null=True, verbose_name='Telefon')),
                ('adres', models.TextField(blank=True, help_text='Vatandaşın açık adresi', null=True, verbose_name='Adres')),
                ('hakkinda', models.TextField(blank=True, help_text='Vatandaş hakkında kısa bilgi', null=True, verbose_name='Hakkında')),
                ('ozgecmis_dosya', models.FileField(blank=True, help_text='Vatandaşın özgeçmiş dosyası (PDF, Word vb.)', null=True, upload_to='ozgecmis/', verbose_name='Özgeçmiş Dosyası')),
                ('is_usta', models.BooleanField(default=False, help_text='Vatandaşın usta olarak iş yapıp yapamayacağını belirler', verbose_name='Usta mı?')),
                ('is_is_arayan', models.BooleanField(default=False, help_text='Vatandaşın iş arayıp aramadığını belirler', verbose_name='İş arıyor mu?')),
                ('usta_unvani', models.CharField(blank=True, help_text='Usta olarak çalışıyorsa kullandığı ünvan', max_length=100, null=True, verbose_name='Usta Ünvanı')),
                ('usta_aciklama', models.TextField(blank=True, help_text='Ustalık hizmetleri hakkında açıklama', null=True, verbose_name='Usta Açıklaması')),
                ('facebook', models.URLField(blank=True, help_text='Facebook profil adresi', null=True, verbose_name='Facebook')),
                ('twitter', models.URLField(blank=True, help_text='Twitter profil adresi', null=True, verbose_name='Twitter')),
                ('linkedin', models.URLField(blank=True, help_text='LinkedIn profil adresi', null=True, verbose_name='LinkedIn')),
                ('instagram', models.URLField(blank=True, help_text='Instagram profil adresi', null=True, verbose_name='Instagram')),
                ('olusturma_tarihi', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('guncelleme_tarihi', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('il', models.ForeignKey(blank=True, help_text='Vatandaşın ikamet ettiği il', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vatandaslar', to='ayarlar.il', verbose_name='İl')),
                ('ilce', models.ForeignKey(blank=True, help_text='Vatandaşın ikamet ettiği ilçe', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vatandaslar', to='ayarlar.ilce', verbose_name='İlçe')),
                ('kullanici', models.OneToOneField(help_text='Bu vatandaş profilinin bağlı olduğu kullanıcı hesabı', on_delete=django.db.models.deletion.CASCADE, related_name='vatandas_bilgisi', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Vatandaş',
                'verbose_name_plural': 'Vatandaşlar',
            },
        ),
        migrations.CreateModel(
            name='Sertifika',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sertifika_adi', models.CharField(help_text='Alınan sertifika veya belgenin adı', max_length=200, verbose_name='Sertifika Adı')),
                ('veren_kurum', models.CharField(help_text='Sertifikayı veren kurum veya kuruluş', max_length=200, verbose_name='Veren Kurum')),
                ('alis_tarihi', models.DateField(help_text='Sertifikanın alındığı tarih', verbose_name='Alış Tarihi')),
                ('gecerlilik_tarihi', models.DateField(blank=True, help_text='Sertifikanın geçerlilik tarihi (süresiz ise boş bırakın)', null=True, verbose_name='Geçerlilik Tarihi')),
                ('sertifika_dosya', models.FileField(blank=True, help_text='Sertifikanın dijital kopyası', null=True, upload_to='sertifikalar/', verbose_name='Sertifika Dosyası')),
                ('vatandas', models.ForeignKey(help_text='Bu sertifikanın ait olduğu vatandaş', on_delete=django.db.models.deletion.CASCADE, related_name='sertifikalar', to='hesap.vatandas', verbose_name='Vatandaş')),
            ],
            options={
                'verbose_name': 'Sertifika',
                'verbose_name_plural': 'Sertifikalar',
                'ordering': ['-alis_tarihi'],
            },
        ),
        migrations.CreateModel(
            name='IsTecrubesi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firma_adi', models.CharField(help_text='Çalışılan firmanın adı', max_length=200, verbose_name='Firma Adı')),
                ('pozisyon', models.CharField(help_text='Çalışılan pozisyon veya ünvan', max_length=200, verbose_name='Pozisyon')),
                ('baslangic_tarihi', models.DateField(help_text='İşe başlama tarihi', verbose_name='Başlangıç Tarihi')),
                ('bitis_tarihi', models.DateField(blank=True, help_text='İşten ayrılma tarihi (halen çalışıyorsa boş bırakın)', null=True, verbose_name='Bitiş Tarihi')),
                ('calisiyor', models.BooleanField(default=False, help_text='Bu firmada halen çalışıyorsa işaretleyin', verbose_name='Halen Çalışıyor')),
                ('aciklama', models.TextField(blank=True, help_text='Yaptığınız işler ve sorumluluklar hakkında bilgi', null=True, verbose_name='Açıklama')),
                ('referans_adi', models.CharField(blank=True, help_text='Referans olarak gösterilebilecek kişinin adı', max_length=100, null=True, verbose_name='Referans Adı')),
                ('referans_telefon', models.CharField(blank=True, help_text='Referans kişinin telefon numarası', max_length=20, null=True, verbose_name='Referans Telefonu')),
                ('vatandas', models.ForeignKey(help_text='Bu iş tecrübesinin ait olduğu vatandaş', on_delete=django.db.models.deletion.CASCADE, related_name='is_tecrubesi', to='hesap.vatandas', verbose_name='Vatandaş')),
            ],
            options={
                'verbose_name': 'İş Tecrübesi',
                'verbose_name_plural': 'İş Tecrübeleri',
                'ordering': ['-baslangic_tarihi'],
            },
        ),
        migrations.CreateModel(
            name='EgitimDurumu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('okul_adi', models.CharField(help_text='Eğitim alınan kurumun adı', max_length=200, verbose_name='Okul Adı')),
                ('bolum', models.CharField(blank=True, help_text='Eğitim alınan bölüm veya alan', max_length=200, null=True, verbose_name='Bölüm')),
                ('derece', models.CharField(choices=[('ilkokul', 'İlkokul'), ('ortaokul', 'Ortaokul'), ('lise', 'Lise'), ('onlisans', 'Önlisans'), ('lisans', 'Lisans'), ('yukseklisans', 'Yüksek Lisans'), ('doktora', 'Doktora')], help_text='Eğitimin derecesi veya seviyesi', max_length=20, verbose_name='Derece')),
                ('baslangic_tarihi', models.DateField(help_text='Eğitime başlama tarihi', verbose_name='Başlangıç Tarihi')),
                ('bitis_tarihi', models.DateField(blank=True, help_text='Eğitimi bitirme tarihi (halen devam ediyorsa boş bırakın)', null=True, verbose_name='Bitiş Tarihi')),
                ('devam_ediyor', models.BooleanField(default=False, help_text='Eğitim halen devam ediyorsa işaretleyin', verbose_name='Devam Ediyor')),
                ('aciklama', models.TextField(blank=True, help_text='Eğitim hakkında ek bilgiler', null=True, verbose_name='Açıklama')),
                ('vatandas', models.ForeignKey(help_text='Bu eğitim bilgisinin ait olduğu vatandaş', on_delete=django.db.models.deletion.CASCADE, related_name='egitimler', to='hesap.vatandas', verbose_name='Vatandaş')),
            ],
            options={
                'verbose_name': 'Eğitim Durumu',
                'verbose_name_plural': 'Eğitim Durumları',
                'ordering': ['-baslangic_tarihi'],
            },
        ),
        migrations.CreateModel(
            name='Yetenek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yetenek', models.CharField(help_text='Yetenek, beceri veya uzmanlık alanı', max_length=100, verbose_name='Yetenek')),
                ('seviye', models.PositiveSmallIntegerField(choices=[('baslangic', 'Başlangıç'), ('orta', 'Orta'), ('iyi', 'İyi'), ('cokiyi', 'Çok İyi'), ('uzman', 'Uzman')], default='iyi', help_text='Bu yetenekteki uzmanlık seviyeniz', verbose_name='Seviye')),
                ('vatandas', models.ForeignKey(help_text='Bu yeteneğin ait olduğu vatandaş', on_delete=django.db.models.deletion.CASCADE, related_name='yetenekler', to='hesap.vatandas', verbose_name='Vatandaş')),
            ],
            options={
                'verbose_name': 'Yetenek',
                'verbose_name_plural': 'Yetenekler',
            },
        ),
        migrations.CreateModel(
            name='UstalikAlani',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deneyim_yili', models.PositiveSmallIntegerField(default=0, help_text='Bu meslekteki toplam deneyim yılı', verbose_name='Deneyim Yılı')),
                ('aciklama', models.TextField(blank=True, help_text='Bu meslekteki ustalık hizmetleriniz hakkında bilgi', null=True, verbose_name='Açıklama')),
                ('fiyat_bilgisi', models.CharField(blank=True, help_text='Sunulan hizmetin fiyat aralığı veya ücretlendirme bilgisi', max_length=100, null=True, verbose_name='Fiyat Bilgisi')),
                ('meslek', models.ForeignKey(help_text='Ustalık yapılan meslek alanı', on_delete=django.db.models.deletion.CASCADE, related_name='ustalar', to='ayarlar.meslek', verbose_name='Meslek')),
                ('vatandas', models.ForeignKey(help_text='Bu ustalık alanının ait olduğu vatandaş', on_delete=django.db.models.deletion.CASCADE, related_name='ustalik_alanlari', to='hesap.vatandas', verbose_name='Vatandaş')),
            ],
            options={
                'verbose_name': 'Ustalık Alanı',
                'verbose_name_plural': 'Ustalık Alanları',
                'unique_together': {('vatandas', 'meslek')},
            },
        ),
        migrations.CreateModel(
            name='CalismaSaatleri',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gun', models.CharField(choices=[('pazartesi', 'Pazartesi'), ('sali', 'Salı'), ('carsamba', 'Çarşamba'), ('persembe', 'Perşembe'), ('cuma', 'Cuma'), ('cumartesi', 'Cumartesi'), ('pazar', 'Pazar')], help_text='Çalışılabilecek gün', max_length=10, verbose_name='Gün')),
                ('baslangic_saati', models.TimeField(help_text='Çalışma başlangıç saati (örn: 09:00)', verbose_name='Başlangıç Saati')),
                ('bitis_saati', models.TimeField(help_text='Çalışma bitiş saati (örn: 18:00)', verbose_name='Bitiş Saati')),
                ('aktif', models.BooleanField(default=True, help_text='Bu günün çalışma programı aktif mi?', verbose_name='Aktif')),
                ('vatandas', models.ForeignKey(help_text='Bu çalışma saatlerinin ait olduğu vatandaş', on_delete=django.db.models.deletion.CASCADE, related_name='calisma_saatleri', to='hesap.vatandas', verbose_name='Vatandaş')),
            ],
            options={
                'verbose_name': 'Çalışma Saati',
                'verbose_name_plural': 'Çalışma Saatleri',
                'ordering': ['gun', 'baslangic_saati'],
                'unique_together': {('vatandas', 'gun')},
            },
        ),
    ]
